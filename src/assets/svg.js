import { h } from 'preact';

export function StoppIcon (props) {
  return (
        <svg {...props} viewBox="0 0 630 630" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g filter="url(#filter0_d)">
            <path d="M51.6117 471.612C28.1696 448.17 15 416.375 15 383.223L15 238.777C15 205.625 28.1696 173.83 51.6117 150.388L154.388 47.6116C177.83 24.1695 209.625 10.9999 242.777 10.9999L387.223 10.9999C420.375 10.9999 452.17 24.1695 475.612 47.6115L578.388 150.388C601.83 173.83 615 205.625 615 238.777V383.223C615 416.375 601.83 448.169 578.388 471.612L475.612 574.388C452.17 597.83 420.375 611 387.223 611H242.777C209.625 611 177.83 597.83 154.388 574.388L51.6117 471.612Z" fill="#DB9AB8"/>
            <path d="M68.1117 464.112C44.6696 440.67 31.5 408.875 31.5 375.723V244.277C31.5 211.125 44.6696 179.33 68.1117 155.888L160.888 63.1116C184.33 39.6696 216.125 26.4999 249.277 26.4999H315H380.723C413.875 26.4999 445.67 39.6695 469.112 63.1116L561.888 155.888C585.33 179.33 598.5 211.125 598.5 244.277V375.723C598.5 408.875 585.33 440.67 561.888 464.112L469.112 556.888C445.67 580.33 413.875 593.5 380.723 593.5H249.277C216.125 593.5 184.33 580.33 160.888 556.888L68.1117 464.112Z" fill="#E9BEE4"/>
            </g>
            <path d="M142.315 280.022C141.54 281.262 140.713 282.192 139.835 282.812C139.008 283.432 137.923 283.742 136.58 283.742C135.392 283.742 134.1 283.381 132.705 282.657C131.362 281.882 129.812 281.03 128.055 280.1C126.35 279.17 124.387 278.343 122.165 277.62C119.943 276.845 117.412 276.457 114.57 276.457C109.662 276.457 105.993 277.517 103.565 279.635C101.188 281.702 100 284.517 100 288.082C100 290.356 100.723 292.242 102.17 293.74C103.617 295.238 105.503 296.53 107.828 297.615C110.204 298.7 112.891 299.707 115.888 300.637C118.936 301.516 122.036 302.523 125.188 303.66C128.339 304.745 131.413 306.037 134.41 307.535C137.458 309.033 140.145 310.945 142.47 313.27C144.847 315.595 146.758 318.437 148.205 321.795C149.652 325.102 150.375 329.106 150.375 333.807C150.375 339.026 149.471 343.908 147.663 348.455C145.854 353.002 143.219 356.98 139.758 360.39C136.348 363.748 132.111 366.409 127.048 368.372C122.036 370.284 116.327 371.24 109.92 371.24C106.407 371.24 102.816 370.878 99.1475 370.155C95.5308 369.432 92.0175 368.424 88.6075 367.132C85.1975 365.789 81.9942 364.213 78.9975 362.405C76.0008 360.597 73.3917 358.582 71.17 356.36L78.92 344.115C79.54 343.237 80.3408 342.513 81.3225 341.945C82.3558 341.325 83.4667 341.015 84.655 341.015C86.205 341.015 87.755 341.506 89.305 342.487C90.9067 343.469 92.6892 344.554 94.6525 345.742C96.6675 346.931 98.9667 348.016 101.55 348.997C104.133 349.979 107.182 350.47 110.695 350.47C115.448 350.47 119.143 349.437 121.778 347.37C124.413 345.252 125.73 341.919 125.73 337.372C125.73 334.737 125.007 332.593 123.56 330.94C122.113 329.287 120.202 327.917 117.825 326.832C115.5 325.747 112.839 324.792 109.843 323.965C106.846 323.138 103.772 322.234 100.62 321.252C97.4683 320.219 94.3942 318.979 91.3975 317.532C88.4008 316.034 85.7142 314.097 83.3375 311.72C81.0125 309.292 79.1267 306.295 77.68 302.73C76.2333 299.113 75.51 294.67 75.51 289.4C75.51 285.163 76.3625 281.03 78.0675 277C79.7725 272.97 82.2783 269.379 85.585 266.227C88.8917 263.076 92.9475 260.57 97.7525 258.71C102.558 256.798 108.06 255.842 114.26 255.842C117.722 255.842 121.08 256.127 124.335 256.695C127.642 257.212 130.768 258.012 133.713 259.097C136.658 260.131 139.396 261.397 141.928 262.895C144.511 264.342 146.81 265.995 148.825 267.855L142.315 280.022ZM246.895 277.852H215.12V370H188.925V277.852H157.15V257.082H246.895V277.852ZM368.458 313.502C368.458 321.666 367.037 329.261 364.195 336.287C361.405 343.314 357.453 349.437 352.338 354.655C347.223 359.822 341.048 363.877 333.815 366.822C326.633 369.768 318.651 371.24 309.868 371.24C301.084 371.24 293.076 369.768 285.843 366.822C278.609 363.877 272.409 359.822 267.243 354.655C262.128 349.437 258.149 343.314 255.308 336.287C252.518 329.261 251.123 321.666 251.123 313.502C251.123 305.339 252.518 297.744 255.308 290.717C258.149 283.691 262.128 277.594 267.243 272.427C272.409 267.261 278.609 263.205 285.843 260.26C293.076 257.315 301.084 255.842 309.868 255.842C318.651 255.842 326.633 257.341 333.815 260.337C341.048 263.282 347.223 267.338 352.338 272.505C357.453 277.672 361.405 283.768 364.195 290.795C367.037 297.822 368.458 305.391 368.458 313.502ZM341.643 313.502C341.643 307.922 340.919 302.911 339.473 298.467C338.026 293.972 335.933 290.175 333.195 287.075C330.508 283.975 327.202 281.598 323.275 279.945C319.348 278.292 314.879 277.465 309.868 277.465C304.804 277.465 300.283 278.292 296.305 279.945C292.378 281.598 289.046 283.975 286.308 287.075C283.621 290.175 281.554 293.972 280.108 298.467C278.661 302.911 277.938 307.922 277.938 313.502C277.938 319.134 278.661 324.197 280.108 328.692C281.554 333.136 283.621 336.907 286.308 340.007C289.046 343.107 292.378 345.484 296.305 347.137C300.283 348.739 304.804 349.54 309.868 349.54C314.879 349.54 319.348 348.739 323.275 347.137C327.202 345.484 330.508 343.107 333.195 340.007C335.933 336.907 338.026 333.136 339.473 328.692C340.919 324.197 341.643 319.134 341.643 313.502ZM423.708 312.495C430.528 312.495 435.436 310.867 438.433 307.612C441.429 304.357 442.928 299.811 442.928 293.972C442.928 291.389 442.54 289.038 441.765 286.92C440.99 284.802 439.802 282.993 438.2 281.495C436.65 279.945 434.661 278.757 432.233 277.93C429.856 277.103 427.014 276.69 423.708 276.69H410.068V312.495H423.708ZM423.708 257.082C431.664 257.082 438.484 258.038 444.168 259.95C449.903 261.81 454.604 264.393 458.273 267.7C461.993 271.007 464.731 274.907 466.488 279.402C468.244 283.897 469.123 288.754 469.123 293.972C469.123 299.604 468.219 304.771 466.41 309.472C464.602 314.174 461.838 318.204 458.118 321.562C454.398 324.921 449.67 327.556 443.935 329.467C438.252 331.327 431.509 332.257 423.708 332.257H410.068V370H383.873V257.082H423.708ZM522.248 312.495C529.068 312.495 533.976 310.867 536.973 307.612C539.97 304.357 541.468 299.811 541.468 293.972C541.468 291.389 541.08 289.038 540.305 286.92C539.53 284.802 538.342 282.993 536.74 281.495C535.19 279.945 533.201 278.757 530.773 277.93C528.396 277.103 525.555 276.69 522.248 276.69H508.608V312.495H522.248ZM522.248 257.082C530.205 257.082 537.025 258.038 542.708 259.95C548.443 261.81 553.145 264.393 556.813 267.7C560.533 271.007 563.271 274.907 565.028 279.402C566.785 283.897 567.663 288.754 567.663 293.972C567.663 299.604 566.759 304.771 564.95 309.472C563.142 314.174 560.378 318.204 556.658 321.562C552.938 324.921 548.21 327.556 542.475 329.467C536.792 331.327 530.05 332.257 522.248 332.257H508.608V370H482.413V257.082H522.248Z" fill="#DB9AB8"/>
            <defs>
                <filter id="filter0_d" x="0" y="-0.00012207" width="630" height="630" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                <feFlood flood-opacity="0" result="BackgroundImageFix"/>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
                <feOffset dy="4"/>
                <feGaussianBlur stdDeviation="7.5"/>
                <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
                <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"/>
                <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"/>
                </filter>
            </defs>
        </svg>
  )
}
// function Location() {
//     const [loc, setLocation] = useState({long: 0, lat: 0 })
    
//     const getLocation = useCallBack( () => {
//         console.log(getLocation())
//     })
// }
